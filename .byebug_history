c
ordered_historical_data[1].reverse
ordered_historical_data[1]
ordered_historical_data[0]
ordered_historical_data
c
@ordered_list[0][1].reverse
@ordered_list[0][1].revese
@ordered_list[0][1]
@ordered_list[0][0]
@ordered_list[0].reverse
@ordered_list[0]
@ordered_list
@ordered_list[0]
@ordered_list
adsf
asdf
adsf = @ordered_list.reverse
@ordered_list.reverse
@ordered_list
c
@ordered_list
@ordered_list.first
qwer[0][1]
qwer = @ordered_list.last
asdf[1]
asdf[0][1]["resource"]["fields"]["price"].to_f.round(2)
asdf[0][1]["resource"]["fields"]["price"]
asdf[0][1]["resource"]["fields"]
asdf[0][1]["resource"]
asdf[0][1]
asdf[0][0].stock.ticker_symbol
asdf[0][0].stock
asdf[0][0].id
asdf[0][0]
asdf[0]
asfd[0]
asdf = @ordered_list[0]
@ordered_list[0]
@ordered_list
n
c
@errors
n
status
n
@ordered_list[0]
@ordered_list
c
@feed.entries
@feed.entries[0..5]
c
date.to_datetime.strftime("%a, %-m/%-d, %l:%M%p")
date.to_datetime.strftime("%a, %-m/%-d, %l:%M:%S%p")
date.to_datetime.strftime("%a, %m/%-d, %l:%M:%S%p")
date.to_datetime.strftime("%a, %m/%-d, %l:%M:%S")
date.to_datetime.strftime("%a, %m/%-d, #l:%M:%S")
date.to_datetime.to_s
date.to_datetime
date.to_s
date
date.class
date
dttm.to_time
dttm.to_s
dttm = DateTime.parse(date.to_s)
dttm = DateTime.strptime(date.to_s)
dttm = Date.parse(date.to_s)
dttm = DateTime.strptime(date)
dttm = Date.parse(date)
date
date = a.published
b
b = a.published
a = @news[0]
@news
c
@news
c
@errors
n
status
n
@ordered_list
n
c
@errors
n
status
n
@ordered_list
@ordered_array
n
month_data
n
month_data_string
n
month_data_url
n
@ordered_list
n
current_price_data
n
current_price_string
n
current_price_url
n
@ordered_list
c
feed.entries.first.published
feed.entries.first.url
feed.entries.first.title
feed.entries.first
JSON.parse feed
JSON.parse feed.entries
feed.entries.length
feed.entries
@news
feed
c
HTTP.get(url)
url
string
c
string
c
status
n
@data
n
c
n
c
n
end_date
start_date
n
params
c
params[:range]
params
c
@ordered_list
x
x = generate_ordered_array current_user.list
current_user.list
List.find_by(user_id: current_user.id)
current_user
@ordered_array
c
a[0][1]
a[0][0][1]["resource"]["fields"]["price"]
a[0][0][1]["resource"]["fields']["price"]
a[0][0][1]
a[0][1]
a[0][0][0].stock
a[0][0][0].id
a[0][0].id
a[0][0]
a[0]
a = @ordered_list.zip(ordered_historical_data)
c
@ordered_list.zip(ordered_historical_data)
@ordered_list
n
ordered_historical_data
n
c
ordered_historical_data
n
s
n
month_data_string
n
month_data_url
c
month_data_url
exit
month_data_string
n
month_data_url
c
month_data_url
c
month_data_string
n
month_data_url
c
@ordered_list
c
StockListItem.find(55)
@ordered_list
c
@ordered_list
c
@ordered_list
c
@ordered_list
c
StockListItem.find(52)
@ordered_list
StockListItem.find(51)
current_user.list
current_user
c
@ordered_list
c
@ordered_list[0][1]["resource"]["fields"]["price"]
@ordered_list[0][1]["resource"]
@ordered_list[0][1].resource
@ordered_list[0][1]
@ordered_list[0][0]
@ordered_list[0]
@ordered_list
c
@ordered_list
c
bc
bc.zip(a)
bc = [1]
b
b.zip(a)
b = [1]
[1].zip(a)
a = data["list"]["resources"]
data
string
url
@ordered_list
c
url
c
data
c
data
c
data
c
exit
c
n
c
exception
n
req
n
url
n
c
res.body
c
current_user
c
User.all
current_user
c
